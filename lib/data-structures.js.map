{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b1ee36ff219975d97f19","webpack:///./src/index.js","webpack:///./src/binary-search-tree/binary-search-tree.js"],"names":["BSTNode","key","left","right","_key","_left","_right","BST","root","val","bstNode","recurseBST","node","Error","findNode","lookup","hasVal","currentNode","direction","parentNode","parentToCurNodeDir","curNodeToChildDir","response","lookRecursively","parent","type"],"mappings":"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","file":"data-structures.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"data-structures\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-structures\"] = factory();\n\telse\n\t\troot[\"data-structures\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b1ee36ff219975d97f19\n **/","export * from './binary-search-tree/binary-search-tree';\n\n\n/** WEBPACK FOOTER **\n ** F:/Workspace/Es6/data-structures.js/~/eslint-loader!./src/index.js\n **/","/**\r\n * This creates a node\r\n * @name BSTNode\r\n * @param key\r\n * @param left\r\n * @param right\r\n * @return BSTNode\r\n */\r\nexport class BSTNode {\r\n  constructor(key, left = null, right = null) {\r\n    // the constructor creates the leaf node\r\n    this._key = key;\r\n    this._left = left;\r\n    this._right = right;\r\n  }\r\n\r\n  /* Getter and Setter for key */\r\n  get key() { return this._key; }\r\n  set key(key) { this._key = key; }\r\n\r\n  /* Getter and Setter for left sub tree */\r\n  get left() { return this._left; }\r\n  set left(left) { this._left = left; }\r\n\r\n  /* Getter and Setter for right sub tree */\r\n  get right() { return this._right; }\r\n  set right(right) { this._right = right; }\r\n}\r\n\r\nexport class BST {\r\n  constructor() {\r\n    this.root = null;\r\n  }\r\n\r\n  /**\r\n   * Insert value in the BST\r\n   * @param {*} val\r\n   */\r\n  insert(val) {\r\n    // create a BST node\r\n    const bstNode = new BSTNode(val);\r\n\r\n    /**\r\n     * @name recurseBST\r\n     * @param {*} node - optional, default value is this.root\r\n     */\r\n    const recurseBST = (node = this.root) => {\r\n      if (node.key > val && !node.left) {\r\n        node.left = bstNode;\r\n      } else if (node.key > val) {\r\n        recurseBST(node.left);\r\n      } else if (node.key < val && !node.right) {\r\n        node.right = bstNode;\r\n      } else if (node.key < val) {\r\n        recurseBST(node.right);\r\n      }\r\n    }\r\n\r\n    if (!this.root) {\r\n      // if the root is null then assign the created node to the root.\r\n      this.root = bstNode;\r\n    } else {\r\n      recurseBST();\r\n    }\r\n  }\r\n\r\n  delete(val) {\r\n    if (!this.root) {\r\n      return new Error('BST is empty. Cannot delete from empty BST');\r\n    } else {\r\n      let findNode = this.lookup(val);\r\n      if (findNode.hasVal) {\r\n        // case 1\r\n        // when the node has no children or when its a leaf\r\n        // then simply delete the node\r\n        if (!findNode.currentNode.left && !findNode.currentNode.right) {\r\n          const direction = findNode.parentNode.key > val ? 'left' : 'right';\r\n          findNode.parentNode[direction] = null;\r\n        }\r\n        // case 2\r\n        // when node has just 1 child\r\n        // Simply delete the key and point the parent to the child\r\n        else if (!!findNode.currentNode.left ^ !!findNode.currentNode.right) {\r\n          const parentToCurNodeDir = findNode.parentNode.key > val ? 'left' : 'right';\r\n          const curNodeToChildDir = findNode.currentNode.left ? 'left' : 'right';\r\n          findNode.parentNode[parentToCurNodeDir] = findNode.currentNode[curNodeToChildDir];\r\n        }\r\n        // case 3\r\n        // when node has both left and right children\r\n        // Find minimum value in the right subtree of the node containing the key to be deleted.\r\n        // Replace the key to be deleted with the min value.\r\n        // Then delete the min val from the right subtree.\r\n        else if (findNode.currentNode.left && findNode.currentNode.right) {\r\n\r\n        }\r\n      } else {\r\n        return new Error('Node not found.');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Looks for a value in the BST.\r\n   * @param {string|number} val\r\n   * @return {object} response\r\n   */\r\n  lookup(val) {\r\n    let response = { hasVal: false, currentNode: null, parentNode: null };\r\n    const lookRecursively = (node = this.root, parent) => {\r\n      if (node.key === val) {\r\n        response.hasVal = true;\r\n        response.currentNode = node;\r\n        response.parentNode = parent;\r\n      } else if (node.left && node.key > val) {\r\n        lookRecursively(node.left, node);\r\n      } else if (node.right && node.key < val) {\r\n        lookRecursively(node.right, node);\r\n      }\r\n    }\r\n\r\n    lookRecursively();\r\n    return response;\r\n  }\r\n\r\n  /**\r\n   * Print the values of the BST in specific order\r\n   * @param {string} type - value of type can be inOrder, breadthFirst, depthFirst\r\n   */\r\n  print(type) {\r\n    switch (type) {\r\n      case 'inOrder':\r\n        break;\r\n      case 'breadthFirst':\r\n        break;\r\n      case 'depthFirst':\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** F:/Workspace/Es6/data-structures.js/~/eslint-loader!./src/binary-search-tree/binary-search-tree.js\n **/"],"sourceRoot":""}